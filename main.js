// alert(123);
// // ==================================================================
// alert("Привет, мир!");
// // ================================================================== 
// console.log("Привет, мир!");
// // ================================================================== 

// // 1. Задача в группе:

// // Insert (с англ. Вставить)
// const a = parseInt(prompt("Вставить a:"));
// const b = parseInt(prompt("Вставить b:"));
// alert(a + b);     // alert-сообщение

// console.log(123);

// // ================================================================== 

// // 2. Задача в группе:

// const a = Number.parseInt(prompt("Вставить a:"));
// const b = Number.parseInt(prompt("Вставить b:"));
// alert(`Результат сложения чисел ${a} и ${b} равно: ${myFunc(a, b)}`);
// // ставим обратные кавычки `...`

// function myFunc(a, b) {
//     return a + b;   // return-вернуть
// }
// // ================================================================== 

// // 3. Задача в группе: 
// // Написать функцию, которая принимает имя пользователя при её вызове
// // и выводит сообщение с приветствием пользователя по имени.
// // Проверить работоспособность функции.
// // Вывести на экран, Привет, Павел!

// const nameInsert = prompt("Вставить имя:");  // nameInsert(вставка имени)
// myFunc(nameInsert);

// function myFunc(n) {
//     alert(`Привет, ${n}!`);
// }

// // ================================================================== 

// // 4. Задача в группе: Вывести на экран, в диалоговом окне текст с сообщением:
// //    Вам хорошо живётся? И должно быть две кнопки ОК и ОТМЕНА.
// //    Если нажимают ОК, то мы пишем в ответ: Тогда мы идём к вам!
// //    Если нажимают ОТМЕНА, то пишем в ответ: Ну, вы там, держитесь! 
// // 1. Вариант
// const goodLive = confirm("Вам хорошо живётся?"); // confirm(кэнфёрм - подтверждать) 

// if (goodLive) {
//     alert("Тогда мы идём к вам!")
// } else {
//     alert("Ну вы держитесь там!")
// }


// // 2. Вариант
// // Решение: Создаём очередную константу str. И в зависимости от goodLive, 
// // он нам просто присваивает значение, либо до двоеточия, либо после.

// const goodLive = confirm("Вам хорошо живётся?");

// const str = goodLive ? "Тогда мы идём к вам!" : "Ну вы держитесь там!";
// alert(str);  // alert-сообщение


// // 3. Вариант
// // Перед вызовом alert, сначала, внутри круглых скобок решится, что будет выводится.
// // Либо то, что после вопроса, либо то, что после двоеточия.

// const goodLive = confirm("Вам хорошо живётся?");
// alert(goodLive ? "Тогда мы идём к вам!" : "Ну вы держитесь там!");

// // ================================================================== 

// // 5. Задача в группе:
// Пример того, что нужно сделать в switch
// <script>
//     let age = 101;

//     if (age == 18) {
//         alert('Вы совершеннолетний, все можно!');
// } else if (age == 10) {
//         alert('Вам надо учить уроки!');
// } else if (age == 30) {
//         alert('Ложитесь спать, завтра на работу');
// } else {
//         alert('Мы не знаем что Вам делать');
// }
// </script>


// // Решение
// // switch (свэч - переключатель)

// const age = Number.parseInt(prompt("Введите свой возраст:"));  // (на англ. Enter your age:)

// switch (age) {
//     case 18:
//         alert('Вы совершеннолетний, все можно!');
//         break;
//     case 10:
//         alert('Вам надо учить уроки!');
//         break;
//     case 30:
//         alert('Ложитесь спать, завтра на работу');
//         break;
//     case 70:
//         alert('Мы не знаем что Вам делать');
// }

// // ================================================================== 

// // 6. Задача в группе:
// // Необходимо от пользователя получить число.
// // Необходимо вывести разряды числа, а именно: количество сотен, десятков и единиц.
// // Пример:
// // Пользователь ввел число 163. Программа должна вывести:
// // "В числе 163 количество сотен: 1, десятков: 6, единиц: 3"
// // Пример 2:
// // Пользователь ввел число 74. Программа должна вывести:
// // "В числе 74 количество сотен: 0, десятков: 7, единиц: 4"
// // Пример 3:
// // Пользователь ввел число 9537. Программа должна вывести:
// // "В числе 9537 количество сотен: 5, десятков: 3, единиц: 7"
// // Уточнение: пользователь всегда вводит корректное положительное целое число.

// const num = Number.parseInt(prompt("Введите целое число:"));
// // const num = 456; //  Если сразу написать число
// let copyNum = num;
// const units = copyNum % 10;
// copyNum = (copyNum - units) / 10;
// const dozen = copyNum % 10;
// const hund = (copyNum - dozen) / 10;

// console.log(`В числе ${num} количество сотен: ${hund}, десятков: ${dozen}, единиц: ${units}`);

// // ================================================================== 

// // 7. Задача в группе:
// // Вариант 1
// const arrAges = [0.9, 5, 60, 35, 20, 15];   //Создаём массив[]
// let minAge = arrAges[0];                    // Ищем min и max число в массивах.
// let maxAge = arrAges[0];                    // т.е. создаём переменные min и max числа.
// for (let i = 1; i < arrAges.length; i++) {  // Пробегаемся по циклу, по массиву.
//     if (arrAges[i] < minAge) {    // если текущее число меньше min,
//         minAge = arrAges[i];      // то min переписываем на него
//     }
//     if (arrAges[i] > maxAge) {    // тоже самое и с max.
//         maxAge = arrAges[i];
//     }
//     // Всё в консоль выводим округлённые в нижнюю сторону эти два числа.
// } console.log(Math.floor(maxAge) - Math.floor(minAge));


// // Вариант 2
// // 2. И через Math.max.apply (Маз Макса плай) и Math.max.apply
// // выводятся минимальное и максимальное значения.
// // Вариант не супер оптимизированный, но с циклом лучше, 
// // т.к. с ним можно пробежаться один раз. Но и это решение норм.

// function differenceInAges(ages) {
//     // const max_age = Math.max.apply(null, ages);
//     const max_age = Math.max(...ages);  // <= Этот вариант записи более современный.
//     const min_age = Math.max.apply(null, ages);
//     let res = [min_age, max_age, (max_age - min_age)];
//     return res;
// }
// // 1. Скопировано решение,которое уже предлагалось, уже с заданными массивами.
// console.log(differenceInAges([82, 15, 6, 38, 35]));  // [6, 82, 76]
// console.log(differenceInAges([57, 99, 14, 32]));     // [14, 99, 85]

// // ================================================================== 

// // 8. Задача в группе:
// // Создать функцию, которая может принимать любое неотрицательное целое число
// // в качестве аргумента и возвращать его с цифрами в порядке убывания. 
// // По сути, переставьте цифры, чтобы получить максимально возможное число.
// // Примеры:
// // Вход: 42145 Выход: 54421
// // Вход: 145263 Выход: 654321
// // Ввод: 123456789 Выход: 987654321

// // Решение: Здесь нужно организовать сортировку. 
// // Принимать строку и запихивать в массив. append до бесконечности, грубо говоря.
// // т.к. Массивы расширяемы. Создаём пустой массив и потом 
// // можно запихивать в него сколько угодно значений.
// // а) Определение сортировки () Функция сортировки в R возвращает 
// // данные в порядке возрастания или убывания.


const number = Number.parseInt(prompt("Enter your number:"));
console.log(sortArray(number));
function sortArray(number) {
    let numbers = [];
    const strNum = number.toString();
    for (let index = 0; index < strNum.length; index++) {
        const element = strNum[index];
        numbers.push(Number.parseInt(element));
    }
    numbers.sort().reverse(); return Number.parseInt(numbers.join(''))
}

